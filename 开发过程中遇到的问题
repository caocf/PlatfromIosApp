1.lancuerscreen 这个默认页面是在info.plist 中配置的
2.所有的对外引用都需要头文件
3.关键字：#param mark - 用于间隔函数 列出函数列表时比较清晰
4.关键字：
5.协议  。协议可以单独定义一个文件 ，也可以定义在头文件中（我看大部分都定义在头文件中）
         协议的引用 可以在 头文件的 继承方法后  加<> 也可以在类文件的（） 后面加 如
 @interface AFNNetworkController  () <NSURLSessionTaskDelegate>
 @interface AFNNetworkController ：NSUIController <NSURLSessionTaskDelegate>

6.实现协议里的方法 只能用粘贴 没有快捷键
7.static 同c 语言 意思为只能在本文件中是用

8.使用全局的变量或者方法入口
AppDelegate *myDelegate = [[UIApplication sharedApplication] delegate];
myDelegte.myName = @"123 ";


9.block 多用于直接执行方法回调 而协议 对于两个类的关联上 使用 见 HttpUtils 相关回调

从xib中加载view
NSArray *nib = [[NSBundle mainBundle]loadNibNamed:@"CustomView" owner:self options:nil];
//得到第一个UIView
UIView *tmpCustomView = [nib objectAtIndex:0];

//通过tag 加载到view
    UIButton *icon = (UIButton *)[rowView viewWithTag:1];

10.使用xib 的好处是能快速开发  。不好的地方 在于代码控制 xib 上得view 变换位置时 非常困难因为添加了约束

11.
//特别注意是 块代码的时候用得不是指针 而是直接块的名字 作为参数传递
+(void)decodeResult:(NSString *) mNsResultData success:(IDecodeWithSuccess) success error:(IDecodeWithException) error;、

12. xcode 6.0以后 的xib 的auto默认是打开的 在xib页面的右下方有调节 约束的相关属性 就是如android的相对布局
    同时UIView 的可拖动控件在较下面的位置

13.在使用afns 的时候 json上传数据 返回数据后我给id response 转换为NSString reason: '-[__NSCFDictionary bytes]: unrecognized selector  (exception)

   //异常原因： 因为afn 默认给数据已经转成了NSMutable 对象

14.关于使用c＋＋的常量表示发 的m文件需要添加如下的头

#import <UIKit/UIKit.h>

15. 加入pods 后不能编译 提示（linker command failed with exit code 1 (use -v to see invocation)的错误调试）需要多pod 和工程进行clean即可

16 pod 更新时提示 已经有相关地址 或者private key 解决办法：sudo rm -fr ~/.cocoapods/repos/master
$ pod setup (这个知识在工程合并的时候会出现 )

   根治的办法是 ，删除本地的pod 引用 重新编辑Podfile 并install ，（如果更换podfile的结构 就需要重新执行以上操作）


17。 UIImage *image=[UIImage imageNamed:@"chatfrom_bg.png"];
image = [image stretchableImageWithLeftCapWidth:image.size.width * 0.5 topCapHeight:image.size.height * 0.7];
   创建一个内容可拉伸，而边角不拉伸的图片，需要两个参数，第一个是左边不拉伸区域的宽度，第二个参数是上面不拉伸的高度。那么接下来的一个像素会被拉伸。例如，leftCapHeight为6，topCapHeight为8。那么，图片左边的6个像素，上边的8个像素。不会被拉伸，而左边的第7个像素，上边的第9个像素这一块区域将会被拉伸。剩余的部分也不会被拉伸。


